import type { Metadata } from "next";
import { Geist_Mono, Outfit } from "next/font/google";
import "./globals.css";
import "@mantine/core/styles.css";
import "@mantine/charts/styles.css";
import {
  ColorSchemeScript,
  MantineProvider,
  mantineHtmlProps,
} from "@mantine/core";
import { NextIntlClientProvider } from "next-intl";
import { getLocale, getMessages } from "next-intl/server";
import { SessionProvider } from "next-auth/react";
import AuthWrapper from "@/hocs/auth-wrapper";
import { ToastContainer } from "react-toastify";
import Providers from "@/providers/providers";

const geistSans = Outfit({
  variable: "--font-outfit",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "AI PhotoBooth Dashboard",
  icons: {
    icon: "/tech-x.png",
  },
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const locale = await getLocale();
  const messages = await getMessages();

  return (
    <html lang={locale} {...mantineHtmlProps}>
      <head>
        <meta
          name="google-site-verification"
          content="ATFxmJ6wYB1LAqpKVsBMRhaRjexyKu3JSlXFTMem2H4"
        />
        <ColorSchemeScript />
        <meta
          name="google-site-verification"
          content="ATFxmJ6wYB1LAqpKVsBMRhaRjexyKu3JSlXFTMem2H4"
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Providers>
          <NextIntlClientProvider messages={messages}>
            <MantineProvider withCssVariables={false}>
              <SessionProvider >
                <AuthWrapper>
                  {children}
                  <ToastContainer />
                </AuthWrapper>
              </SessionProvider>
            </MantineProvider>
          </NextIntlClientProvider>
        </Providers>
      </body>
    </html>
  );
}
